{"version":3,"sources":["Feature/Search/SearchBar.js","Feature/Search/SearchQueries.js","Feature/Search/SearchResults.js","Feature/Search/Search.js","App.js","index.js"],"names":["SearchBar","props","onChange","event","setState","searchText","target","value","state","Jumbotron","className","Row","InputGroup","FormControl","aria-label","aria-describedby","this","placeholder","onKeyDown","Append","Button","variant","onClick","React","Component","USER_FIELDS","gql","USERS_NEXT_QUERY","USERS_BEFORE_QUERY","NextAndPreviousButtons","hasNextPage","hasPreviousPage","onNextPage","onPreviousPage","size","SearchResults","searchQuery","after","before","useQuery","variables","loading","error","data","Spinner","animation","edges","search","userCount","pageInfo","previousCursor","startCursor","nextCursor","endCursor","ListGroup","map","node","Item","Col","xs","Image","width","height","src","avatarUrl","roundedCircle","href","url","name","login","bio","followers","totalCount","following","style","padding","starredRepositories","location","websiteUrl","id","uuidv4","searchTextValue","Search","resetState","key","afterCursor","beforeCursor","trim","App","client","ApolloClient","uri","cache","InMemoryCache","headers","authorization","process","REACT_APP_BEARER_TOKEN","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.a6b28a33.chunk.js","sourcesContent":["import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchText: ''\n        }\n    }\n  \n    render() {\n        return (\n            <Jumbotron className=\"App-header\">\n                <Row>\n                    <h1>Search GitHub Users</h1>\n                </Row>\n                <Row>\n                    <InputGroup className=\"mb-3\">\n                        <FormControl\n                            className=\"SearchInput-dark\"\n                            aria-label=\"Search users\"\n                            aria-describedby=\"Search users\"\n                            key=\"userSearchBar\"\n                            value={this.state.value}\n                            placeholder={\"Search users\"}\n                            onChange={this.onChange}\n                            onKeyDown={this.props.onKeyDown}\n                        />\n                        <InputGroup.Append>\n                            <Button className=\"SearchButton-dark\" variant=\"outline-light\" onClick={this.props.onClick}>\n                                Search\n                            </Button>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </Row>\n            </Jumbotron>\n        );\n    }\n\n    onChange = (event) => {\n        this.setState({searchText: event.target.value});\n        this.props.onChange(event)\n    }\n}\n\nexport default SearchBar;","import { gql } from \"@apollo/client\";\n\nconst USER_FIELDS = gql`\n    fragment UserFields on User {\n        avatarUrl\n        bio\n        id\n        location\n        login\n        name\n        url\n        websiteUrl\n        followers {\n            totalCount\n        }\n        following {\n            totalCount\n        }\n        starredRepositories {\n            totalCount\n        }\n    }\n`;\n\nexport const USERS_NEXT_QUERY = gql`\n    ${USER_FIELDS}\n    query($searchQuery:String!, $after:String) {\n        search(query: $searchQuery, after: $after, type: USER, first: 10) {\n            pageInfo {\n                endCursor\n                startCursor\n                hasNextPage\n                hasPreviousPage\n            }\n            userCount\n            edges {\n                node {\n                    ...UserFields\n                }\n            }\n        }\n    }\n`;\n\nexport const USERS_BEFORE_QUERY = gql`\n    ${USER_FIELDS}\n    query($searchQuery:String!, $before:String) {\n        search(query: $searchQuery, before: $before, type: USER, last: 10) {\n            pageInfo {\n                endCursor\n                startCursor\n                hasNextPage\n                hasPreviousPage\n            }\n            userCount\n            edges {\n                node {\n                    ...UserFields\n                }\n            }\n        }\n    }\n`;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Row from 'react-bootstrap/Row';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { People, Star, GeoAlt, ChevronLeft, ChevronRight, Link } from 'react-bootstrap-icons';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useQuery } from \"@apollo/client\";\nimport { USERS_NEXT_QUERY, USERS_BEFORE_QUERY } from './SearchQueries.js';\n\nfunction SearchResults({ searchQuery, after, before, onNextPage, onPreviousPage }) {\n    const { loading, error, data } = useQuery(before === null ? USERS_NEXT_QUERY : USERS_BEFORE_QUERY, {\n        variables: { searchQuery, after, before },\n    });\n\n    if (loading) return <Spinner className=\"Spinner-custom\" animation=\"border\"/>;\n    if (error) return <p>{error}</p>;\n\n    const edges = data.search.edges\n    const userCount = data.search.userCount ?? 0\n    const hasNextPage = data.search.pageInfo?.hasNextPage ?? false\n    const hasPreviousPage = data.search.pageInfo?.hasPreviousPage ?? false\n    const previousCursor = data.search.pageInfo?.startCursor\n    const nextCursor = data.search.pageInfo?.endCursor\n\n    return (\n        <div>\n            <div>\n                <h3 className=\"App-paragraph\">\n                    {searchQuery == \"\" ? \n                        \"Enter a query to search over 70 million users\" : \n                        <>Found {userCount} result{userCount === 1 ? '' : 's'} for '{searchQuery}'</>\n                    }\n                    \n                </h3>\n            </div>\n            <ListGroup>\n            {edges.map(({ node }) => (\n                <ListGroup.Item key={ node?.id ?? uuidv4() } className=\"User-Results\">\n                    <Row>\n                    <Col xs=\"auto\"><Image width={128} height={128} src={node?.avatarUrl} roundedCircle /></Col>\n                    <Col >\n                        <Row xs=\"auto\">\n                            <a className=\"User-link\" href={node?.url}>{node?.name ?? \"--\"}</a> · {node?.login ?? \"--\"}\n                        </Row>\n                        <Row>\n                            {node?.bio}\n                        </Row>\n                        <Row xs=\"auto\">\n                            <People className=\"User-stats-icons\" size={20}/>\n                            {node?.followers?.totalCount ?? 0} · {node?.following?.totalCount ?? 0} following · <a style={{ padding: '2px' }}></a>\n                            <Star className=\"User-stats-icons\" size={20}/>{node?.starredRepositories?.totalCount ?? 0}\n                        </Row>\n                        <Row xs=\"auto\">\n                            <GeoAlt className=\"User-stats-icons\" size={node?.location ? 20 : 0}/>{node?.location}\n                        </Row>\n                        <Row xs=\"auto\">\n                            <Link className=\"User-stats-icons\" size={node?.websiteUrl ? 20 : 0}/>\n                            <a className=\"User-link\" href={node?.websiteUrl}>{node?.websiteUrl}</a>\n                        </Row>\n                    </Col>\n                    </Row>\n                </ListGroup.Item>\n            ))}\n            </ListGroup>\n            <NextAndPreviousButtons \n                hasNextPage={hasNextPage}\n                hasPreviousPage={hasPreviousPage}\n                onNextPage={() => onNextPage(nextCursor)}\n                onPreviousPage={() => onPreviousPage(previousCursor)}\n            />\n        </div>\n    )\n}\n\nconst NextAndPreviousButtons = ({ hasNextPage, hasPreviousPage, onNextPage, onPreviousPage }) => {\n    return (\n        <div className=\"Pagination-buttons\">\n            {hasPreviousPage ? <Button className=\"Pagination-button\" onClick={onPreviousPage}><ChevronLeft size={24}></ChevronLeft></Button> : <></>}\n            {hasNextPage ? <Button className=\"Pagination-button\" onClick={onNextPage}><ChevronRight size={24}></ChevronRight></Button> : <></>}\n        </div>\n    );\n}\n\nexport default SearchResults;","import React from 'react';\nimport SearchBar from './SearchBar.js';\nimport SearchResults from './SearchResults.js';\n\nvar searchTextValue = ''\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchText: '',\n            afterCursor: null,\n            beforeCursor: null\n        };\n    }\n  \n    render() {\n        return (\n            <div>\n                <SearchBar \n                    value={searchTextValue.trim()} \n                    onChange={this.onChange} \n                    onClick={this.onClick} \n                    onKeyDown={this.onKeyDown} \n                />\n                <SearchResults\n                    searchQuery={this.state.searchText}\n                    after={this.state.afterCursor}\n                    before={this.state.beforeCursor}\n                    onNextPage={this.onNextPage}\n                    onPreviousPage={this.onPreviousPage}\n                />\n            </div>\n        );\n    }\n\n    onChange = (event) => {\n        searchTextValue = event.target.value;\n    }\n\n    onClick = () => {\n        this.resetState();\n    }\n\n    onKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            this.resetState();\n        }\n    }\n\n    resetState = () => {\n        this.setState({afterCursor: null});\n        this.setState({beforeCursor: null});\n        this.setState({searchText: searchTextValue});\n    }\n\n    onNextPage = (nextCursor) => {\n        this.setState({afterCursor: nextCursor});\n        this.setState({beforeCursor: null});\n    }\n\n    onPreviousPage = (previousCursor) => {\n        this.setState({afterCursor: null});\n        this.setState({beforeCursor: previousCursor});\n    }\n}\n\nexport default Search;","import './App.css';\nimport Search from './Feature/Search/Search.js';\n\nfunction App() {\n  \treturn (\n    \t<div className=\"App\">\n      \t\t<Search />\n    \t</div>\n \t );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './custom.scss';\nimport App from './App';\nimport {\n  \tApolloClient,\n  \tInMemoryCache,\n  \tApolloProvider\n} from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  \turi: 'https://api.github.com/graphql',\n  \tcache: new InMemoryCache(),\n  \theaders: {\n    \tauthorization: `bearer ${process.env.REACT_APP_BEARER_TOKEN}`\n  \t}\n});\n\nReactDOM.render(\n  \t<ApolloProvider client={client}>\n   \t \t<App />\n  \t</ApolloProvider>,\n  \tdocument.getElementById('root')\n);\n"],"sourceRoot":""}